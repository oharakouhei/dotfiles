alias dev="scl enable devtoolset-2 bash"                                                                                                                                                                       
export PATH=$HOME/local/bin:"$PATH" 
############################################
# 基本設定

# 文字コードはUTF-8
export LANG=ja_JP.UTF-8

# 履歴
## 履歴の保存先
HISTFILE=$HOME/.zsh-history
## メモリに展開する履歴の数
HISTSIZE=100000
## 保存する履歴の数
SAVEHIST=100000


# コアダンプサイズを制限
limit coredumpsize 102400

# 出力の文字列末尾に改行コードが無い場合でも表示
unsetopt promptcr

# Emacsライクキーバインド設定
## ctrl+aで行の先頭に行ったりできる
bindkey -e

# 色を使う
# setopt prompt_subst
# ビープを鳴らさない
setopt nobeep
# 内部コマンド jobs の出力をデフォルトで jobs -l にする
setopt long_list_jobs
# サスペンド中のプロセスと同じコマンド名を実行した場合はリジューム
setopt auto_resume
# 直前と同じコマンドをヒストリに追加しない
setopt hist_ignore_dups
# cd 時に自動で push
#setopt auto_pushd
# 同じディレクトリを pushd しない
setopt pushd_ignore_dups
# ファイル名で #, ~, ^ の 3 文字を正規表現として扱う
setopt extended_glob
# zsh の開始, 終了時刻をヒストリファイルに書き込む
setopt extended_history
# =command を command のパス名に展開する
setopt equals
# ヒストリを呼び出してから実行する間に一旦編集
setopt hist_verify
# ファイル名の展開で辞書順ではなく数値的にソート
setopt numeric_glob_sort
# 出力時8ビットを通す
setopt print_eight_bit
# 同時に起動したzshの間でヒストリを共有
setopt share_history
# 同じコマンドをヒストリに残さない
setopt hist_ignore_all_dups
# ヒストリファイルに保存するとき、すでに重複したコマンドがあったら古い方を削除する
setopt hist_save_nodups

# ディレクトリ名だけで cd
setopt auto_cd
# スペルチェック
setopt correct
# {a-c} を a b c に展開する機能を使えるようにする
setopt brace_ccl
# Ctrl+S/Ctrl+Q によるフロー制御を使わないようにする
setopt NO_flow_control
# コマンドラインの先頭がスペースで始まる場合ヒストリに追加しない
setopt hist_ignore_space
# コマンドラインでも # 以降をコメントと見なす
setopt interactive_comments
# ファイル名の展開でディレクトリにマッチした場合末尾に / を付加する
setopt mark_dirs
# history (fc -l) コマンドをヒストリリストから取り除く。
setopt hist_no_store
# 最後のスラッシュを自動的に削除しない
setopt noautoremoveslash
# cdした後にlsで表示する
setopt auto_cd
function chpwd() { ls }


############################################
# 補完

# 補完機能の強化
autoload -Uz compinit
compinit

# 補完で小文字でも大文字にマッチさせる
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' '+m:{A-Z}={a-z}'
# 補完候補のカーソル選択を有効に
zstyle ':completion:*:default' menu select=1

# TAB で順に補完候補を切り替える
setopt auto_menu
# カッコの対応などを自動的に補完
setopt auto_param_keys
# ディレクトリ名の補完で末尾の / を自動的に付加し、次の補完に備える
setopt auto_param_slash
# 候補が多い場合は補完候補を詰めて表示
setopt list_packed
# 補完候補一覧でファイルの種別をマーク表示
setopt list_types
# 補完候補を一覧表示
setopt auto_list
# --prefix=/usr などの = 以降も補完
setopt magic_equal_subst

# ps コマンドのプロセス名補完
zstyle ':completion:*:processes' command 'ps x -o pid,s,args'


############################################
# vcs_info # 今いるパスのリポジトリの情報を表示

autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"


############################################
# 色

# ZSH 色
# This file is written using [http://ho-ki-boshi.blogspot.com/2007/12/zsh.html]

autoload colors
colors
export PROMPT="%{${fg[green]}%}%~%{${reset_color}%}
%{${fg[red]}%}[%n@${HOST}]$%{${reset_color}%} "

# ls

export LSCOLORS=gxfxxxxxcxxxxxxxxxxxxx
export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
export ZLS_COLORS=$LS_COLORS
### eval `dircolors`
### (カラー設定dircolors-solarized)
### eval $(dircolors ~/zshells/dircolors-solarized/dircolors.ansi-univers)

### 補完候補も同じ色に
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}


############################################
# エイリアス
case "${OSTYPE}" in
darwin*)
  alias ls="ls -GB"
  alias ll="ls -lhGB"
  alias la="ls -laGB"
  ;;
linux*)
  alias ls='ls --color=auto'
  alias ll='ls -lh --color=auto'
  alias la='ls -la --color=auto'
  ;;
esac
alias l="ls"
alias f="firefox"
alias sl="ls"
alias v="vim"
alias vi="vim"
alias c="clear"
alias st="sublime"
alias less="less -R"
alias sfproject="/Applications/MAMP/htdocs/sfproject"
alias railsprojects="/Applications/MAMP/htdocs/railsprojects"
alias cakeprojects="/Applications/MAMP/htdocs/cakeprojects"
alias revelprojects="/Users/kohei/go/src/github.com/revelprojects"
alias be="bundle exec"
alias rstudio="/opt/homebrew-cask/Caskroom/rstudio/0.99.486/RStudio.app/Contents/MacOS/RStudio"
alias xopen='open -a /Applications/Xcode.app'
# for tmux
alias ssh='TERM=xterm ssh'

############################################
# 環境変数
#export PATH=/usr/local/bin:/usr/bin:/bin:$PATH
export PATH=$HOME/local/bin:$PATH

export PATH="$HOME/.rbenv/bin:$PATH"
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export PATH=/Applications/gnuplot.app:/Applications/gnuplot.app/bin:$PATH

export ANDROID_SDK_HOME=/Applications/eclipse/android-sdk-macosx
export PATH=$PATH:$ANDROID_SDK_HOME/platform-tools

export PATH=$PATH:/Applications/
export PATH=$PATH:/Applications/MAMP/Library/bin
export PATH=$PATH:/usr/local/lib/node_modules/

export PATH=$PATH:/Applications/MAMP/bin/mongodb-osx-x86_64-2.6.4/bin
export PATH=$PATH:/Applications/SWI-Prolog.app/Contents/MacOS
export PATH=$PATH:/Applications/MAMP/bin/php/php5.3.28/bin
export PATH=$HOME/.pyenv/shims:$PATH

# TeX
#PATH=/usr/local/bin:/usr/local/sbin:$PATH
PATH=/usr/local/texlive/2016/bin/x86_64-darwin:$PATH
PATH=/bin:$PATH #必要か不明
PATH=cation:$PATH

# Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

# Go
export GOROOT=`go env GOROOT`
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin
# added by Miniconda2 4.0.5 installer
#export PATH="/Users/kohei/miniconda2/bin:$PATH"
export PYENV_ROOT="${HOME}/.pyenv"
export PATH=${PYENV_ROOT}/bin:$PATH
eval "$(pyenv init -)"
export JUPYTER_ROOT="${HOME}/.pyenv/shims"
export PATH=${PYENV_ROOT}/bin:$PATH
